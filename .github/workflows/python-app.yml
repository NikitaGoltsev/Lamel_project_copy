# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install pyinstaller
        python -m pip install -r requirements.txt
    #- name: Run Test's
      #run: |
        #python \src\test\test_example.py
    - name: Run PyInstaller
      run: |
        python -m PyInstaller -w ./src/Lamel_window/proccesing.py --name "Lamel graph"
    - uses: actions/upload-artifact@v2
      with:
          name: Windows_RGB Lamel_Window
          path: "dist/RGB Lamel.exe"
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "Window_for_lamelgraph${{ github.event.head_commit.id }}"
        release_name: " Lamel_Window ${{ github.event.head_commit.message }})"
        overwrite: true
        body: |
          Release windows version
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: "dist/RGB Lamel.exe"
        asset_name: "RGB Lamel.exe"
        asset_content_type: application/zip
        